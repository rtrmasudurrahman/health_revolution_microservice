version: "3.8"

services:
  # PostgreSQL database service
  postgres:
    image: postgres:13
    container_name: postgres
    restart: on-failure
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "auth"]
      interval: 30s
      timeout: 30s
      retries: 3

  # pgAdmin service for managing PostgreSQL
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: on-failure
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
      - "5051:443"

  # MailHog service for catching outgoing emails during development
  mailhog:
    image: mailhog/mailhog
    container_name: mailhog2
    ports:
      - "1025:1025"
      - "8025:8025"
    volumes:
      - mailhog:/var/lib/mailhog
  # Redis Stack service
  redis-stack:
    image: redis/redis-stack:latest
    ports:
      - "6379:6379"
      - "8001:8001"
    volumes:
      - redis-stack:/var/lib/redis-stack
    environment:
      - REDIS_ARGS=--save 900 1

  # RabbitMQ message broker service
  rabbitmq:
    image: rabbitmq:3.8-management
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

volumes:
  postgres:
  mailhog:
  redis-stack:
  rabbitmq_data:
